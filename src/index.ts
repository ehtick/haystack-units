/**
 * This file is automatically generated during the build process.
 *
 * Please do not manually edit this file!
 */

import { HUnit } from 'haystack-core'

// dimensionless
export const percent = HUnit.define({
	ids: ['percent', '%'],
	scale: 0.01,
	offset: 0,
	quantity: 'dimensionless',
})
export const pixel = HUnit.define({
	ids: ['pixel', 'px'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const decibel = HUnit.define({
	ids: ['decibel', 'db'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const powerFactor = HUnit.define({
	ids: ['power_factor', 'pf'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const ph = HUnit.define({
	ids: ['ph', 'pH'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const percentRelativeHumidity = HUnit.define({
	ids: ['percent_relative_humidity', '%RH'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const gramsOfWaterPerKilogramDryAir = HUnit.define({
	ids: ['grams_of_water_per_kilogram_dry_air', 'gH₂O/kgAir'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const voltsPerDegreeKelvin = HUnit.define({
	ids: ['volts_per_degree_kelvin', 'V/K'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const degreeDaysCelsius = HUnit.define({
	ids: ['degree_days_celsius', '°daysC'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const degreeDaysFahrenheit = HUnit.define({
	ids: ['degree_days_fahrenheit', '°daysF'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const percentObscurationPerFoot = HUnit.define({
	ids: ['percent_obscuration_per_foot', '%obsc/ft'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const percentObscurationPerMeter = HUnit.define({
	ids: ['percent_obscuration_per_meter', '%obsc/m'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const psiPerDegreeFahrenheit = HUnit.define({
	ids: ['psi_per_degree_fahrenheit', 'psi/°F'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const squareMetersPerNewton = HUnit.define({
	ids: ['square_meters_per_newton', 'm²/N'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const wattsPerSquareMeterDegreeKelvin = HUnit.define({
	ids: ['watts_per_square_meter_degree_kelvin', 'W/m²K'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const dbMillivolt = HUnit.define({
	ids: ['db_millivolt', 'dBmV'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const dbMicrovolt = HUnit.define({
	ids: ['db_microvolt', 'dBµV'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const partsPerUnit = HUnit.define({
	ids: ['parts_per_unit', 'ppu'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const partsPerMillion = HUnit.define({
	ids: ['parts_per_million', 'ppm'],
	scale: 0.000001,
	offset: 0,
	quantity: 'dimensionless',
})
export const partsPerBillion = HUnit.define({
	ids: ['parts_per_billion', 'ppb'],
	scale: 1e-9,
	offset: 0,
	quantity: 'dimensionless',
})
export const gramsPerKilogram = HUnit.define({
	ids: ['grams_per_kilogram', 'g/kg'],
	scale: 0.001,
	offset: 0,
	quantity: 'dimensionless',
})
export const radian = HUnit.define({
	ids: ['radian', 'rad'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const degreesAngular = HUnit.define({
	ids: ['degrees_angular', 'deg'],
	scale: 0.017453292519943,
	offset: 0,
	quantity: 'dimensionless',
})
export const degreesPhase = HUnit.define({
	ids: ['degrees_phase', 'degPh'],
	scale: 0.017453292519943,
	offset: 0,
	quantity: 'dimensionless',
})
export const steradian = HUnit.define({
	ids: ['steradian', 'sr'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const nephelometricTurbidityUnits = HUnit.define({
	ids: ['nephelometric_turbidity_units', 'ntu'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const formazinNephelometricUnit = HUnit.define({
	ids: ['formazin_nephelometric_unit', 'fnu'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const powerUsageEffectiveness = HUnit.define({
	ids: ['power_usage_effectiveness', 'PUE'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})
export const dataCenterInfrastructureEfficiency = HUnit.define({
	ids: ['data_center_infrastructure_efficiency', 'DCIE'],
	scale: 1,
	offset: 0,
	quantity: 'dimensionless',
})

// currency
export const afghani = HUnit.define({
	ids: ['afghani', 'AFN', 'Af'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const algerianDinar = HUnit.define({
	ids: ['algerian_dinar', 'DZD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const argentinePeso = HUnit.define({
	ids: ['argentine_peso', 'ARS'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const armenianDram = HUnit.define({
	ids: ['armenian_dram', 'AMD', 'Դ'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const arubanGuilderFlorin = HUnit.define({
	ids: ['aruban_guilder_florin', 'AWG', 'ƒ'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const australianDollar = HUnit.define({
	ids: ['australian_dollar', 'AUD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const azerbaijanianManat = HUnit.define({
	ids: ['azerbaijanian_manat', 'AZN', 'ман'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const bahamianDollar = HUnit.define({
	ids: ['bahamian_dollar', 'BSD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const bahrainiDinar = HUnit.define({
	ids: ['bahraini_dinar', 'BHD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const baht = HUnit.define({
	ids: ['baht', 'THB', '฿'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const balboa = HUnit.define({
	ids: ['balboa', 'PAB'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const barbadosDollar = HUnit.define({
	ids: ['barbados_dollar', 'BBD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const belarussianRuble = HUnit.define({
	ids: ['belarussian_ruble', 'BYR', 'Br'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const belizeDollar = HUnit.define({
	ids: ['belize_dollar', 'BZD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const bermudianDollar = HUnit.define({
	ids: ['bermudian_dollar', 'BMD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const bolivarFuerte = HUnit.define({
	ids: ['bolivar_fuerte', 'VEF'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const boliviano = HUnit.define({
	ids: ['boliviano', 'BOB'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const brazilianReal = HUnit.define({
	ids: ['brazilian_real', 'BRL', 'R$'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const bruneiDollar = HUnit.define({
	ids: ['brunei_dollar', 'BND'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const bulgarianLev = HUnit.define({
	ids: ['bulgarian_lev', 'BGN', 'лв'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const burundiFranc = HUnit.define({
	ids: ['burundi_franc', 'BIF'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const canadianDollar = HUnit.define({
	ids: ['canadian_dollar', 'CAD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const capeVerdeEscudo = HUnit.define({
	ids: ['cape_verde_escudo', 'CVE'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const caymanIslandsDollar = HUnit.define({
	ids: ['cayman_islands_dollar', 'KYD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const cedi = HUnit.define({
	ids: ['cedi', 'GHS', '₵'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const cfaFrancBceao = HUnit.define({
	ids: ['cfa_franc_bceao', 'XAF'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const cfpFranc = HUnit.define({
	ids: ['cfp_franc', 'XPF'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const chileanPeso = HUnit.define({
	ids: ['chilean_peso', 'CLP'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const chineseYuan = HUnit.define({
	ids: ['chinese_yuan', 'CNY', '元'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const congoleseFranc = HUnit.define({
	ids: ['congolese_franc', 'CDF'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const cordobaOro = HUnit.define({
	ids: ['cordoba_oro', 'NIO', 'C$'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const costaRicanColon = HUnit.define({
	ids: ['costa_rican_colon', 'CRC', '₡'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const croatianKuna = HUnit.define({
	ids: ['croatian_kuna', 'HRK', 'Kn'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const cubanPeso = HUnit.define({
	ids: ['cuban_peso', 'CUP'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const czechKoruna = HUnit.define({
	ids: ['czech_koruna', 'CZK', 'Kč'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const dalasi = HUnit.define({
	ids: ['dalasi', 'GMD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const danishKrone = HUnit.define({
	ids: ['danish_krone', 'DKK', 'kr'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const denar = HUnit.define({
	ids: ['denar', 'MKD', 'ден'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const djiboutiFranc = HUnit.define({
	ids: ['djibouti_franc', 'DJF'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const dobra = HUnit.define({
	ids: ['dobra', 'STD', 'Db'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const dominicanPeso = HUnit.define({
	ids: ['dominican_peso', 'DOP'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const dong = HUnit.define({
	ids: ['dong', 'VND', '₫'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const eastCaribbeanDollar = HUnit.define({
	ids: ['east_caribbean_dollar', 'XCD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const egyptianPound = HUnit.define({
	ids: ['egyptian_pound', 'EGP'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const ethiopianBirr = HUnit.define({
	ids: ['ethiopian_birr', 'ETB'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const euro = HUnit.define({
	ids: ['euro', 'EUR', '€'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const falklandIslandsPound = HUnit.define({
	ids: ['falkland_islands_pound', 'FKP'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const fijiDollar = HUnit.define({
	ids: ['fiji_dollar', 'FJD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const forint = HUnit.define({
	ids: ['forint', 'HUF'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const gibraltarPound = HUnit.define({
	ids: ['gibraltar_pound', 'GIP'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const gourde = HUnit.define({
	ids: ['gourde', 'HTG'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const guarani = HUnit.define({
	ids: ['guarani', 'PYG', '₲'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const guineaFranc = HUnit.define({
	ids: ['guinea_franc', 'GNF'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const guyanaDollar = HUnit.define({
	ids: ['guyana_dollar', 'GYD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const hongKongDollar = HUnit.define({
	ids: ['hong_kong_dollar', 'HKD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const hryvnia = HUnit.define({
	ids: ['hryvnia', 'UAH', '₴'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const icelandKrona = HUnit.define({
	ids: ['iceland_krona', 'ISK', 'Kr'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const indianRupee = HUnit.define({
	ids: ['indian_rupee', 'INR', '₹'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const iranianRial = HUnit.define({
	ids: ['iranian_rial', 'IRR'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const iraqiDinar = HUnit.define({
	ids: ['iraqi_dinar', 'IQD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const jamaicanDollar = HUnit.define({
	ids: ['jamaican_dollar', 'JMD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const jordanianDinar = HUnit.define({
	ids: ['jordanian_dinar', 'JOD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const kenyanShilling = HUnit.define({
	ids: ['kenyan_shilling', 'KES', 'Sh'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const kina = HUnit.define({
	ids: ['kina', 'PGK'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const kip = HUnit.define({
	ids: ['kip', 'LAK', '₭'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const konvertibilnaMarka = HUnit.define({
	ids: ['konvertibilna_marka', 'BAM', 'КМ'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const kuwaitiDinar = HUnit.define({
	ids: ['kuwaiti_dinar', 'KWD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const kwacha = HUnit.define({
	ids: ['kwacha', 'MWK', 'MK'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const kwanza = HUnit.define({
	ids: ['kwanza', 'AOA', 'Kz'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const kyat = HUnit.define({
	ids: ['kyat', 'MMK'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const lari = HUnit.define({
	ids: ['lari', 'GEL', 'ლ'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const lebanesePound = HUnit.define({
	ids: ['lebanese_pound', 'LBP'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const lek = HUnit.define({
	ids: ['lek', 'ALL'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const lempira = HUnit.define({
	ids: ['lempira', 'HNL'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const leone = HUnit.define({
	ids: ['leone', 'SLL', 'Le'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const leu = HUnit.define({
	ids: ['leu', 'RON'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const liberianDollar = HUnit.define({
	ids: ['liberian_dollar', 'LRD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const libyanDinar = HUnit.define({
	ids: ['libyan_dinar', 'LYD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const lilangeni = HUnit.define({
	ids: ['lilangeni', 'SZL'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const loti = HUnit.define({
	ids: ['loti', 'LSL'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const malagasyAriary = HUnit.define({
	ids: ['malagasy_ariary', 'MGA'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const malaysianRinggit = HUnit.define({
	ids: ['malaysian_ringgit', 'MYR', 'RM'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const manat = HUnit.define({
	ids: ['manat', 'TMT'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const mauritiusRupee = HUnit.define({
	ids: ['mauritius_rupee', 'MUR'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const metical = HUnit.define({
	ids: ['metical', 'MZN', 'MTn'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const mexicanPeso = HUnit.define({
	ids: ['mexican_peso', 'MXN'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const moldavianLeu = HUnit.define({
	ids: ['moldavian_leu', 'MDL'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const moroccanDirham = HUnit.define({
	ids: ['moroccan_dirham', 'MAD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const naira = HUnit.define({
	ids: ['naira', 'NGN', '₦'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const nakfa = HUnit.define({
	ids: ['nakfa', 'ERN', 'Nfk'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const namibiaDollar = HUnit.define({
	ids: ['namibia_dollar', 'NAD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const nepaleseRupee = HUnit.define({
	ids: ['nepalese_rupee', 'NPR'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const newIsraeliShekel = HUnit.define({
	ids: ['new_israeli_shekel', 'ILS', '₪'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const newZealandDollar = HUnit.define({
	ids: ['new_zealand_dollar', 'NZD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const ngultrum = HUnit.define({
	ids: ['ngultrum', 'BTN'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const northKoreanWon = HUnit.define({
	ids: ['north_korean_won', 'KPW'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const norwegianKrone = HUnit.define({
	ids: ['norwegian_krone', 'NOK'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const nuevoSol = HUnit.define({
	ids: ['nuevo_sol', 'PEN'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const ouguiya = HUnit.define({
	ids: ['ouguiya', 'MRO', 'UM'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const pakistanRupee = HUnit.define({
	ids: ['pakistan_rupee', 'PKR', '₨'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const pataca = HUnit.define({
	ids: ['pataca', 'MOP'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const pesoUruguayo = HUnit.define({
	ids: ['peso_uruguayo', 'UYU'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const philippinePeso = HUnit.define({
	ids: ['philippine_peso', 'PHP', '₱'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const poundSterling = HUnit.define({
	ids: ['pound_sterling', 'GBP', '£'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const pula = HUnit.define({
	ids: ['pula', 'BWP'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const pzloty = HUnit.define({
	ids: ['pzloty', 'PLN', 'zł'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const qatariRial = HUnit.define({
	ids: ['qatari_rial', 'QAR'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const quetzal = HUnit.define({
	ids: ['quetzal', 'GTQ'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const rand = HUnit.define({
	ids: ['rand', 'ZAR'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const rialOmani = HUnit.define({
	ids: ['rial_omani', 'OMR'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const riel = HUnit.define({
	ids: ['riel', 'KHR'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const rufiyaa = HUnit.define({
	ids: ['rufiyaa', 'MVR'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const rupiah = HUnit.define({
	ids: ['rupiah', 'IDR', 'Rp'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const russianRuble = HUnit.define({
	ids: ['russian_ruble', 'RUB'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const rwandaFranc = HUnit.define({
	ids: ['rwanda_franc', 'RWF'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const saintHelenaPound = HUnit.define({
	ids: ['saint_helena_pound', 'SHP'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const saudiRiyal = HUnit.define({
	ids: ['saudi_riyal', 'SAR'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const serbianDinar = HUnit.define({
	ids: ['serbian_dinar', 'RSD', 'din'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const seychellesRupee = HUnit.define({
	ids: ['seychelles_rupee', 'SCR'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const singaporeDollar = HUnit.define({
	ids: ['singapore_dollar', 'SGD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const solomonIslandsDollar = HUnit.define({
	ids: ['solomon_islands_dollar', 'SBD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const som = HUnit.define({
	ids: ['som', 'KGS'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const somaliShilling = HUnit.define({
	ids: ['somali_shilling', 'SOS'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const somoni = HUnit.define({
	ids: ['somoni', 'TJS', 'ЅМ'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const southKoreanWon = HUnit.define({
	ids: ['south_korean_won', 'KRW', '₩'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const sriLankaRupee = HUnit.define({
	ids: ['sri_lanka_rupee', 'LKR', 'Rs'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const sudanesePound = HUnit.define({
	ids: ['sudanese_pound', 'SDG'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const surinameDollar = HUnit.define({
	ids: ['suriname_dollar', 'SRD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const swedishKrona = HUnit.define({
	ids: ['swedish_krona', 'SEK'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const swissFranc = HUnit.define({
	ids: ['swiss_franc', 'CHF', 'SFr'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const syrianPound = HUnit.define({
	ids: ['syrian_pound', 'SYP'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const taiwanDollar = HUnit.define({
	ids: ['taiwan_dollar', 'TWD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const taka = HUnit.define({
	ids: ['taka', 'BDT', '৳'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const tala = HUnit.define({
	ids: ['tala', 'WST'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const tanzanianShilling = HUnit.define({
	ids: ['tanzanian_shilling', 'TZS'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const tenge = HUnit.define({
	ids: ['tenge', 'KZT', '〒'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const trinidadAndTobagoDollar = HUnit.define({
	ids: ['trinidad_and_tobago_dollar', 'TTD'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const tugrik = HUnit.define({
	ids: ['tugrik', 'MNT', '₮'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const tunisianDinar = HUnit.define({
	ids: ['tunisian_dinar', 'TND'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const turkishLira = HUnit.define({
	ids: ['turkish_lira', 'TRY', '₤'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const uaeDirham = HUnit.define({
	ids: ['uae_dirham', 'AED'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const ugandaShilling = HUnit.define({
	ids: ['uganda_shilling', 'UGX'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const usDollar = HUnit.define({
	ids: ['us_dollar', 'USD', '$'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const uzbekistanSum = HUnit.define({
	ids: ['uzbekistan_sum', 'UZS'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const vatu = HUnit.define({
	ids: ['vatu', 'VUV', 'Vt'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const yemeniRial = HUnit.define({
	ids: ['yemeni_rial', 'YER'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const yen = HUnit.define({
	ids: ['yen', 'JPY', '¥'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const zambianKwacha = HUnit.define({
	ids: ['zambian_kwacha', 'ZMW', 'ZK'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})
export const zimbabweDollar = HUnit.define({
	ids: ['zimbabwe_dollar', 'ZWL'],
	scale: 1,
	offset: 0,
	quantity: 'currency',
})

// acceleration
export const metersPerSecondSquared = HUnit.define({
	ids: ['meters_per_second_squared', 'm/s²'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'acceleration',
})

// angular acceleration
export const radiansPerSecondSquared = HUnit.define({
	ids: ['radians_per_second_squared', 'rad/s²'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'angular acceleration',
})

// angular momentum
export const jouleSecond = HUnit.define({
	ids: ['joule_second', 'Js'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'angular momentum',
})

// angular velocity
export const radiansPerSecond = HUnit.define({
	ids: ['radians_per_second', 'rad/s'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'angular velocity',
})
export const revolutionsPerMinute = HUnit.define({
	ids: ['revolutions_per_minute', 'rpm'],
	scale: 6.2831853071796,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'angular velocity',
})

// area
export const squareMeter = HUnit.define({
	ids: ['square_meter', 'm²'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'area',
})
export const squareMillimeter = HUnit.define({
	ids: ['square_millimeter', 'mm²'],
	scale: 0.000001,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'area',
})
export const squareCentimeter = HUnit.define({
	ids: ['square_centimeter', 'cm²'],
	scale: 0.0001,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'area',
})
export const squareKilometer = HUnit.define({
	ids: ['square_kilometer', 'km²'],
	scale: 1000000,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'area',
})
export const squareInch = HUnit.define({
	ids: ['square_inch', 'in²'],
	scale: 0.000645161,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'area',
})
export const squareFoot = HUnit.define({
	ids: ['square_foot', 'ft²'],
	scale: 0.092903,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'area',
})
export const squareYard = HUnit.define({
	ids: ['square_yard', 'yd²'],
	scale: 0.836131,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'area',
})
export const squareMile = HUnit.define({
	ids: ['square_mile', 'mile²'],
	scale: 2589988.110336,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'area',
})
export const acre = HUnit.define({
	ids: ['acre'],
	scale: 4046.872627,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'area',
})

// capacitance
export const farad = HUnit.define({
	ids: ['farad', 'F'],
	scale: 1,
	offset: 0,
	dimensions: { kg: -1, m: -2, sec: 4, K: 0, A: 2, mol: 0, cd: 0 },
	quantity: 'capacitance',
})

// cooling efficiency
export const coefficientOfPerformance = HUnit.define({
	ids: ['coefficient_of_performance', 'COP'],
	scale: 1,
	offset: 0,
	quantity: 'cooling efficiency',
})
export const energyEfficiencyRatio = HUnit.define({
	ids: ['energy_efficiency_ratio', 'Btu/Wh', 'EER'],
	scale: 0.2930832356,
	offset: 0,
	quantity: 'cooling efficiency',
})
export const kilowattPerTon = HUnit.define({
	ids: ['kilowatt_per_ton', 'kW/ton'],
	scale: 1,
	offset: 0,
	quantity: 'cooling efficiency',
})

// density
export const kilogramsPerCubicMeter = HUnit.define({
	ids: ['kilograms_per_cubic_meter', 'kg/m³'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: -3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'density',
})
export const gramsPerCubicMeter = HUnit.define({
	ids: ['grams_per_cubic_meter', 'g/m³'],
	scale: 0.001,
	offset: 0,
	dimensions: { kg: 1, m: -3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'density',
})
export const milligramsPerCubicMeter = HUnit.define({
	ids: ['milligrams_per_cubic_meter', 'mg/m³'],
	scale: 0.000001,
	offset: 0,
	dimensions: { kg: 1, m: -3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'density',
})
export const microgramsPerCubicMeter = HUnit.define({
	ids: ['micrograms_per_cubic_meter', 'µg/m³'],
	scale: 1e-9,
	offset: 0,
	dimensions: { kg: 1, m: -3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'density',
})

// electric charge
export const coulomb = HUnit.define({
	ids: ['coulomb', 'C'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 1, K: 0, A: 1, mol: 0, cd: 0 },
	quantity: 'electric charge',
})
export const ampereHour = HUnit.define({
	ids: ['ampere_hour', 'Ah'],
	scale: 3600,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 1, K: 0, A: 1, mol: 0, cd: 0 },
	quantity: 'electric charge',
})

// electric conductance
export const siemens = HUnit.define({
	ids: ['siemens', 'S'],
	scale: 1,
	offset: 0,
	dimensions: { kg: -1, m: -2, sec: 3, K: 0, A: 2, mol: 0, cd: 0 },
	quantity: 'electric conductance',
})

// electric current
export const ampere = HUnit.define({
	ids: ['ampere', 'A'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 0, K: 0, A: 1, mol: 0, cd: 0 },
	quantity: 'electric current',
})
export const milliampere = HUnit.define({
	ids: ['milliampere', 'mA'],
	scale: 0.001,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 0, K: 0, A: 1, mol: 0, cd: 0 },
	quantity: 'electric current',
})

// electromagnetic moment
export const ampereSquareMeter = HUnit.define({
	ids: ['ampere_square_meter', 'Am²'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: 0, K: 0, A: 1, mol: 0, cd: 0 },
	quantity: 'electromagnetic moment',
})

// electric current density
export const amperesPerSquareMeter = HUnit.define({
	ids: ['amperes_per_square_meter', 'A/m²'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: -2, sec: 0, K: 0, A: 1, mol: 0, cd: 0 },
	quantity: 'electric current density',
})

// electric field strength
export const voltsPerMeter = HUnit.define({
	ids: ['volts_per_meter', 'V/m'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 1, sec: -3, K: 0, A: -1, mol: 0, cd: 0 },
	quantity: 'electric field strength',
})

// electric potential
export const volt = HUnit.define({
	ids: ['volt', 'Volt', 'V'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: -1, mol: 0, cd: 0 },
	quantity: 'electric potential',
})
export const millivolt = HUnit.define({
	ids: ['millivolt', 'mV'],
	scale: 0.001,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: -1, mol: 0, cd: 0 },
	quantity: 'electric potential',
})
export const kilovolt = HUnit.define({
	ids: ['kilovolt', 'kV'],
	scale: 1000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: -1, mol: 0, cd: 0 },
	quantity: 'electric potential',
})
export const megavolt = HUnit.define({
	ids: ['megavolt', 'MV'],
	scale: 1000000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: -1, mol: 0, cd: 0 },
	quantity: 'electric potential',
})

// electric resistance
export const ohm = HUnit.define({
	ids: ['ohm', 'Ω', 'Ω'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: -2, mol: 0, cd: 0 },
	quantity: 'electric resistance',
})
export const kilohm = HUnit.define({
	ids: ['kilohm', 'kΩ', 'kΩ'],
	scale: 1000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: -2, mol: 0, cd: 0 },
	quantity: 'electric resistance',
})
export const megohm = HUnit.define({
	ids: ['megohm', 'MΩ', 'MΩ'],
	scale: 1000000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: -2, mol: 0, cd: 0 },
	quantity: 'electric resistance',
})
export const milliohm = HUnit.define({
	ids: ['milliohm', 'mΩ', 'mΩ'],
	scale: 0.001,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: -2, mol: 0, cd: 0 },
	quantity: 'electric resistance',
})

// electrical conductivity
export const siemensPerMeter = HUnit.define({
	ids: ['siemens_per_meter', 'S/m'],
	scale: 1,
	offset: 0,
	dimensions: { kg: -1, m: -3, sec: 3, K: 0, A: 2, mol: 0, cd: 0 },
	quantity: 'electrical conductivity',
})

// electrical resistivity
export const ohmMeter = HUnit.define({
	ids: ['ohm_meter', 'Ωm', 'Ωm'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 3, sec: -3, K: 0, A: -2, mol: 0, cd: 0 },
	quantity: 'electrical resistivity',
})

// energy
export const joule = HUnit.define({
	ids: ['joule', 'J'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const kilojoule = HUnit.define({
	ids: ['kilojoule', 'kJ'],
	scale: 1000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const wattHour = HUnit.define({
	ids: ['watt_hour', 'Wh'],
	scale: 3600,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const kilowattHour = HUnit.define({
	ids: ['kilowatt_hour', 'kWh'],
	scale: 3600000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const megawattHour = HUnit.define({
	ids: ['megawatt_hour', 'MWh'],
	scale: 3600000000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const gigawattHour = HUnit.define({
	ids: ['gigawatt_hour', 'GWh'],
	scale: 3600000000000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const btu = HUnit.define({
	ids: ['btu', 'BTU'],
	scale: 1054.852,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const kilobtu = HUnit.define({
	ids: ['kilobtu', 'kBTU'],
	scale: 1054852,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const megabtu = HUnit.define({
	ids: ['megabtu', 'MBTU', 'MMBTU'],
	scale: 1054852000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const horsepowerHour = HUnit.define({
	ids: ['horsepower_hour', 'hph'],
	scale: 2686088.6,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const calorie = HUnit.define({
	ids: ['calorie', 'cal'],
	scale: 4.184,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const therm = HUnit.define({
	ids: ['therm'],
	scale: 105506000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const tonsRefrigerationHour = HUnit.define({
	ids: ['tons_refrigeration_hour', 'tonrefh'],
	scale: 12660670.8,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const megajoule = HUnit.define({
	ids: ['megajoule', 'MJ'],
	scale: 1000000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const gigajoule = HUnit.define({
	ids: ['gigajoule', 'GJ'],
	scale: 1000000000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const newtonMeter = HUnit.define({
	ids: ['newton_meter', 'Nm'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const cubicMetersNaturalGas = HUnit.define({
	ids: ['cubic_meters_natural_gas', 'standard_cubic_meter', 'scm', 'm³_gas'],
	scale: 37313432.83582089,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const cubicFeetNaturalGas = HUnit.define({
	ids: ['cubic_feet_natural_gas', 'standard_cubic_foot', 'scf', 'ft³_gas'],
	scale: 1086498,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const hundredCubicFeetNaturalGas = HUnit.define({
	ids: ['hundred_cubic_feet_natural_gas'],
	scale: 108649800,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const thousandCubicFeetNaturalGas = HUnit.define({
	ids: ['thousand_cubic_feet_natural_gas'],
	scale: 1086498000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})
export const millionCubicFeetNaturalGas = HUnit.define({
	ids: ['million_cubic_feet_natural_gas'],
	scale: 1086498000000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy',
})

// apparent energy
export const voltAmpereHour = HUnit.define({
	ids: ['volt_ampere_hour', 'VAh'],
	scale: 3600,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'apparent energy',
})
export const kilovoltAmpereHour = HUnit.define({
	ids: ['kilovolt_ampere_hour', 'kVAh'],
	scale: 3600000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'apparent energy',
})
export const megavoltAmpereHour = HUnit.define({
	ids: ['megavolt_ampere_hour', 'MVAh'],
	scale: 3600000000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'apparent energy',
})

// reactive energy
export const voltAmpereReactiveHour = HUnit.define({
	ids: ['volt_ampere_reactive_hour', 'VARh'],
	scale: 3600,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'reactive energy',
})
export const kilovoltAmpereReactiveHour = HUnit.define({
	ids: ['kilovolt_ampere_reactive_hour', 'kVARh'],
	scale: 3600000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'reactive energy',
})
export const megavoltAmpereReactiveHour = HUnit.define({
	ids: ['megavolt_ampere_reactive_hour', 'MVARh'],
	scale: 3600000000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'reactive energy',
})

// energy by area
export const joulesPerSquareMeter = HUnit.define({
	ids: ['joules_per_square_meter', 'J/m²'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy by area',
})
export const wattHoursPerSquareMeter = HUnit.define({
	ids: ['watt_hours_per_square_meter', 'Wh/m²'],
	scale: 3600,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy by area',
})
export const wattHoursPerSquareFoot = HUnit.define({
	ids: ['watt_hours_per_square_foot', 'Wh/ft²'],
	scale: 38750.077500155,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy by area',
})
export const kilowattHoursPerSquareMeter = HUnit.define({
	ids: ['kilowatt_hours_per_square_meter', 'kWh/m²'],
	scale: 3600000,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy by area',
})
export const kilowattHoursPerSquareFoot = HUnit.define({
	ids: ['kilowatt_hours_per_square_foot', 'kWh/ft²'],
	scale: 38750077.500155,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy by area',
})
export const megawattHoursPerSquareMeter = HUnit.define({
	ids: ['megawatt_hours_per_square_meter', 'MWh/m²'],
	scale: 3600000000,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy by area',
})
export const megawattHoursPerSquareFoot = HUnit.define({
	ids: ['megawatt_hours_per_square_foot', 'MWh/ft²'],
	scale: 38750077500.155,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy by area',
})
export const megajoulesPerSquareMeter = HUnit.define({
	ids: ['megajoules_per_square_meter', 'MJ/m²'],
	scale: 1000000,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy by area',
})
export const megajoulesPerSquareFoot = HUnit.define({
	ids: ['megajoules_per_square_foot', 'MJ/ft²'],
	scale: 10763910.41671,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy by area',
})
export const kilobtuPerSquareFoot = HUnit.define({
	ids: ['kilobtu_per_square_foot', 'kBTU/ft²'],
	scale: 11354337.31957,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy by area',
})
export const megabtuPerSquareFoot = HUnit.define({
	ids: ['megabtu_per_square_foot', 'MBTU/ft²'],
	scale: 11354337319.57,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'energy by area',
})

// enthalpy
export const joulesPerGram = HUnit.define({
	ids: ['joules_per_gram', 'J/g'],
	scale: 0.001,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'enthalpy',
})
export const joulesPerKilogram = HUnit.define({
	ids: ['joules_per_kilogram', 'J/kg'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'enthalpy',
})
export const joulesPerKilogramDryAir = HUnit.define({
	ids: ['joules_per_kilogram_dry_air', 'J/kg_dry'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'enthalpy',
})
export const btuPerPound = HUnit.define({
	ids: ['btu_per_pound', 'BTU/lb'],
	scale: 2325.5576058607867,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'enthalpy',
})
export const btusPerPoundDryAir = HUnit.define({
	ids: ['btus_per_pound_dry_air', 'btu/lb_dry'],
	scale: 2326,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'enthalpy',
})
export const kilojoulesPerKilogram = HUnit.define({
	ids: ['kilojoules_per_kilogram', 'kJ/kg'],
	scale: 1000,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'enthalpy',
})
export const kilojoulesPerKilogramDryAir = HUnit.define({
	ids: ['kilojoules_per_kilogram_dry_air', 'kJ/kg_dry'],
	scale: 1000,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'enthalpy',
})
export const megajoulesPerKilogramDryAir = HUnit.define({
	ids: ['megajoules_per_kilogram_dry_air', 'MJ/kg_dry'],
	scale: 1000000,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'enthalpy',
})
export const caloriePerGram = HUnit.define({
	ids: ['calorie_per_gram', 'cal/g'],
	scale: 4184,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'enthalpy',
})

// entropy
export const joulesPerDegreeKelvin = HUnit.define({
	ids: ['joules_per_degree_kelvin', 'J/°K'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: -1, A: 0, mol: 0, cd: 0 },
	quantity: 'entropy',
})
export const kilojoulesPerDegreeKelvin = HUnit.define({
	ids: ['kilojoules_per_degree_kelvin', 'kJ/°K'],
	scale: 1000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: -1, A: 0, mol: 0, cd: 0 },
	quantity: 'entropy',
})
export const megajoulesPerDegreeKelvin = HUnit.define({
	ids: ['megajoules_per_degree_kelvin', 'MJ/°K'],
	scale: 1000000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: -1, A: 0, mol: 0, cd: 0 },
	quantity: 'entropy',
})

// force
export const newton = HUnit.define({
	ids: ['newton', 'N'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'force',
})
export const poundForce = HUnit.define({
	ids: ['pound_force', 'lbf'],
	scale: 4.448222,
	offset: 0,
	dimensions: { kg: 1, m: 1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'force',
})

// frequency
export const hertz = HUnit.define({
	ids: ['hertz', 'Hz'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'frequency',
})
export const kilohertz = HUnit.define({
	ids: ['kilohertz', 'kHz'],
	scale: 1000,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'frequency',
})
export const cyclesPerHour = HUnit.define({
	ids: ['cycles_per_hour', 'cph'],
	scale: 0.0002777777777777778,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'frequency',
})
export const cyclesPerMinute = HUnit.define({
	ids: ['cycles_per_minute', 'cpm'],
	scale: 0.016666666666666666,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'frequency',
})
export const megahertz = HUnit.define({
	ids: ['megahertz', 'MHz'],
	scale: 1000000,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'frequency',
})
export const perMinute = HUnit.define({
	ids: ['per_minute', '/min'],
	scale: 0.016666666666666666,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'frequency',
})
export const perSecond = HUnit.define({
	ids: ['per_second', '/s'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'frequency',
})
export const perHour = HUnit.define({
	ids: ['per_hour', '/h'],
	scale: 0.0002777777777777778,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'frequency',
})
export const percentPerSecond = HUnit.define({
	ids: ['percent_per_second', '%/s'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'frequency',
})
export const airChangesPerHour = HUnit.define({
	ids: ['air_changes_per_hour', 'ACH'],
	scale: 0.0002777777777777778,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'frequency',
})

// grammage
export const kilogramsPerSquareMeter = HUnit.define({
	ids: ['kilograms_per_square_meter', 'kg/m²'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: -2, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'grammage',
})
export const gramsPerSquareMeter = HUnit.define({
	ids: ['grams_per_square_meter', 'g/m²'],
	scale: 0.001,
	offset: 0,
	dimensions: { kg: 1, m: -2, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'grammage',
})

// heating rate
export const degreesKelvinPerSecond = HUnit.define({
	ids: ['degrees_kelvin_per_second', 'K/s'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 1, A: 0, mol: 0, cd: 0 },
	quantity: 'heating rate',
})
export const degreesCelsiusPerHour = HUnit.define({
	ids: ['degrees_celsius_per_hour', '°C/h'],
	scale: 0.0002777777777777778,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 1, A: 0, mol: 0, cd: 0 },
	quantity: 'heating rate',
})
export const degreesCelsiusPerMinute = HUnit.define({
	ids: ['degrees_celsius_per_minute', '°C/min'],
	scale: 0.016666666666666666,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 1, A: 0, mol: 0, cd: 0 },
	quantity: 'heating rate',
})
export const degreesFahrenheitPerHour = HUnit.define({
	ids: ['degrees_fahrenheit_per_hour', '°F/h'],
	scale: 0.00015432098765432,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 1, A: 0, mol: 0, cd: 0 },
	quantity: 'heating rate',
})
export const degreesFahrenheitPerMinute = HUnit.define({
	ids: ['degrees_fahrenheit_per_minute', '°F/min'],
	scale: 0.0092592592592593,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 1, A: 0, mol: 0, cd: 0 },
	quantity: 'heating rate',
})
export const degreesKelvinPerHour = HUnit.define({
	ids: ['degrees_kelvin_per_hour', 'K/h'],
	scale: 0.0002777777777777778,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 1, A: 0, mol: 0, cd: 0 },
	quantity: 'heating rate',
})
export const degreesKelvinPerMinute = HUnit.define({
	ids: ['degrees_kelvin_per_minute', 'K/min'],
	scale: 0.016666666666666666,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: -1, K: 1, A: 0, mol: 0, cd: 0 },
	quantity: 'heating rate',
})

// illuminance
export const lux = HUnit.define({
	ids: ['lux', 'lx'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: -2, sec: 0, K: 0, A: 0, mol: 0, cd: 1 },
	quantity: 'illuminance',
})
export const footcandle = HUnit.define({
	ids: ['footcandle', 'fc'],
	scale: 0.092937,
	offset: 0,
	dimensions: { kg: 0, m: -2, sec: 0, K: 0, A: 0, mol: 0, cd: 1 },
	quantity: 'illuminance',
})
export const phot = HUnit.define({
	ids: ['phot'],
	scale: 10000,
	offset: 0,
	dimensions: { kg: 0, m: -2, sec: 0, K: 0, A: 0, mol: 0, cd: 1 },
	quantity: 'illuminance',
})

// inductance
export const henry = HUnit.define({
	ids: ['henry', 'H'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: -2, mol: 0, cd: 0 },
	quantity: 'inductance',
})

// irradiance
export const wattsPerSquareMeterIrradiance = HUnit.define({
	ids: ['watts_per_square_meter_irradiance', 'W/m²_irr'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'irradiance',
})
export const wattsPerSquareFootIrradiance = HUnit.define({
	ids: ['watts_per_square_foot_irradiance', 'W/ft²_irr'],
	scale: 10.76391041671,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'irradiance',
})

// length
export const meter = HUnit.define({
	ids: ['meter', 'm'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'length',
})
export const micrometer = HUnit.define({
	ids: ['micrometer', 'µm'],
	scale: 0.00001,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'length',
})
export const millimeter = HUnit.define({
	ids: ['millimeter', 'mm'],
	scale: 0.001,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'length',
})
export const centimeter = HUnit.define({
	ids: ['centimeter', 'cm'],
	scale: 0.01,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'length',
})
export const kilometer = HUnit.define({
	ids: ['kilometer', 'km'],
	scale: 1000,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'length',
})
export const inch = HUnit.define({
	ids: ['inch', 'in'],
	scale: 0.0254,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'length',
})
export const foot = HUnit.define({
	ids: ['foot', 'ft'],
	scale: 0.3048,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'length',
})
export const yard = HUnit.define({
	ids: ['yard', 'yd'],
	scale: 0.9144,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'length',
})
export const mile = HUnit.define({
	ids: ['mile'],
	scale: 1609.344,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'length',
})

// luminance
export const candelasPerSquareMeter = HUnit.define({
	ids: ['candelas_per_square_meter', 'cd/m²'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: -2, sec: 0, K: 0, A: 0, mol: 0, cd: 1 },
	quantity: 'luminance',
})
export const candelsPerSquareFoot = HUnit.define({
	ids: ['candels_per_square_foot', 'cd/ft²'],
	scale: 0.092937,
	offset: 0,
	dimensions: { kg: 0, m: -2, sec: 0, K: 0, A: 0, mol: 0, cd: 1 },
	quantity: 'luminance',
})

// luminous flux
export const lumen = HUnit.define({
	ids: ['lumen', 'lm'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 0, K: 0, A: 0, mol: 0, cd: 1 },
	quantity: 'luminous flux',
})

// luminous intensity
export const candela = HUnit.define({
	ids: ['candela', 'cd'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 0, K: 0, A: 0, mol: 0, cd: 1 },
	quantity: 'luminous intensity',
})

// magnetic field strength
export const amperesPerMeter = HUnit.define({
	ids: ['amperes_per_meter', 'A/m'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: -1, sec: 0, K: 0, A: 1, mol: 0, cd: 0 },
	quantity: 'magnetic field strength',
})

// magnetic flux
export const weber = HUnit.define({
	ids: ['weber', 'Wb'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -2, K: 0, A: -1, mol: 0, cd: 0 },
	quantity: 'magnetic flux',
})

// magnetic flux density
export const tesla = HUnit.define({
	ids: ['tesla', 'T'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -2, K: 0, A: -1, mol: 0, cd: 0 },
	quantity: 'magnetic flux density',
})

// mass
export const kilogram = HUnit.define({
	ids: ['kilogram', 'kg'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'mass',
})
export const milligram = HUnit.define({
	ids: ['milligram', 'mg'],
	scale: 0.000001,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'mass',
})
export const gram = HUnit.define({
	ids: ['gram', 'g'],
	scale: 0.001,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'mass',
})
export const ounce = HUnit.define({
	ids: ['ounce', 'oz'],
	scale: 0.02835,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'mass',
})
export const pound = HUnit.define({
	ids: ['pound', 'lb'],
	scale: 0.453591,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'mass',
})
export const kilopound = HUnit.define({
	ids: ['kilopound', 'klb'],
	scale: 453.591,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'mass',
})
export const metricTon = HUnit.define({
	ids: ['metric_ton', 'ton'],
	scale: 1000,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'mass',
})
export const shortTon = HUnit.define({
	ids: ['short_ton', 't'],
	scale: 907.18474,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'mass',
})

// mass flow
export const kilogramsPerSecond = HUnit.define({
	ids: ['kilograms_per_second', 'kg/s'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'mass flow',
})
export const kilogramsPerMinute = HUnit.define({
	ids: ['kilograms_per_minute', 'kg/min'],
	scale: 0.016666666666666666,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'mass flow',
})
export const kilogramsPerHour = HUnit.define({
	ids: ['kilograms_per_hour', 'kg/h'],
	scale: 0.0002777777777777778,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'mass flow',
})
export const poundsPerMinute = HUnit.define({
	ids: ['pounds_per_minute', 'lb/min'],
	scale: 0.007559872833333333,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'mass flow',
})
export const poundsPerHour = HUnit.define({
	ids: ['pounds_per_hour', 'lb/h'],
	scale: 0.00012599788055555556,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'mass flow',
})
export const poundsPerSecond = HUnit.define({
	ids: ['pounds_per_second', 'lb/s'],
	scale: 0.45359237,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'mass flow',
})
export const kilopoundsPerHour = HUnit.define({
	ids: ['kilopounds_per_hour', 'klb/h'],
	scale: 0.12599788055555555,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'mass flow',
})
export const gramsPerSecond = HUnit.define({
	ids: ['grams_per_second', 'g/s'],
	scale: 0.001,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'mass flow',
})
export const gramsPerMinute = HUnit.define({
	ids: ['grams_per_minute', 'g/min'],
	scale: 0.000016666666666666667,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'mass flow',
})
export const metricTonsPerHour = HUnit.define({
	ids: ['metric_tons_per_hour', 'ton/h'],
	scale: 0.2777777777777778,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'mass flow',
})

// momentum
export const newtonSecond = HUnit.define({
	ids: ['newton_second', 'Ns'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 1, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'momentum',
})

// power
export const watt = HUnit.define({
	ids: ['watt', 'W'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power',
})
export const milliwatt = HUnit.define({
	ids: ['milliwatt', 'mW'],
	scale: 0.001,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power',
})
export const kilowatt = HUnit.define({
	ids: ['kilowatt', 'kW'],
	scale: 1000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power',
})
export const megawatt = HUnit.define({
	ids: ['megawatt', 'MW'],
	scale: 1000000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power',
})
export const gigawatt = HUnit.define({
	ids: ['gigawatt', 'GW'],
	scale: 1000000000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power',
})
export const btusPerHour = HUnit.define({
	ids: ['btus_per_hour', 'BTU/h'],
	scale: 0.292875,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power',
})
export const thermsPerHour = HUnit.define({
	ids: ['therms_per_hour', 'therm/h'],
	scale: 29287.5,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power',
})
export const horsepower = HUnit.define({
	ids: ['horsepower', 'hp'],
	scale: 745.7,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power',
})
export const footPoundsPerSecond = HUnit.define({
	ids: ['foot_pounds_per_second', 'ftlbs/sec'],
	scale: 1.355818,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power',
})
export const tonsRefrigeration = HUnit.define({
	ids: ['tons_refrigeration', 'tonref'],
	scale: 3516.853,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power',
})
export const kilobtusPerHour = HUnit.define({
	ids: ['kilobtus_per_hour', 'kBTU/h'],
	scale: 293.07107017222,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power',
})
export const megabtusPerHour = HUnit.define({
	ids: ['megabtus_per_hour', 'MBTU/h', 'MMBTU/h'],
	scale: 293071.07017222,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power',
})
export const joulesPerHour = HUnit.define({
	ids: ['joules_per_hour', 'J/h'],
	scale: 0.000277777778,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power',
})
export const kilojoulesPerHour = HUnit.define({
	ids: ['kilojoules_per_hour', 'kJ/h'],
	scale: 0.277777778,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power',
})
export const megajoulesPerHour = HUnit.define({
	ids: ['megajoules_per_hour', 'MJ/h'],
	scale: 277.777778,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power',
})
export const gigajoulesPerHour = HUnit.define({
	ids: ['gigajoules_per_hour', 'GJ/h'],
	scale: 277777.778,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power',
})

// power by area
export const wattsPerSquareMeter = HUnit.define({
	ids: ['watts_per_square_meter', 'W/m²'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power by area',
})
export const wattsPerSquareFoot = HUnit.define({
	ids: ['watts_per_square_foot', 'W/ft²'],
	scale: 10.7639104,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power by area',
})
export const kilowattsPerSquareMeter = HUnit.define({
	ids: ['kilowatts_per_square_meter', 'kW/m²'],
	scale: 1000,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power by area',
})
export const kilowattsPerSquareFoot = HUnit.define({
	ids: ['kilowatts_per_square_foot', 'kW/ft²'],
	scale: 10763.9104,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power by area',
})
export const kilobtusPerHourPerSquareFoot = HUnit.define({
	ids: ['kilobtus_per_hour_per_square_foot', 'kBTU/h/ft²'],
	scale: 3153.8257472,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power by area',
})

// power by volumetric flow
export const wattsPerCubicMetersPerSecond = HUnit.define({
	ids: ['watts_per_cubic_meters_per_second', 'W/m³/s'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: -1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power by volumetric flow',
})
export const wattsPerCubicFeetPerMinute = HUnit.define({
	ids: ['watts_per_cubic_feet_per_minute', 'W/cfm'],
	scale: 2118.8800032893155,
	offset: 0,
	dimensions: { kg: 1, m: -1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power by volumetric flow',
})
export const kilowattsPerKilocubicFeetPerMinute = HUnit.define({
	ids: ['kilowatts_per_kilocubic_feet_per_minute', 'kW/kcfm'],
	scale: 2118.8800032893155,
	offset: 0,
	dimensions: { kg: 1, m: -1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power by volumetric flow',
})
export const kilowattsPerGallonsPerMinute = HUnit.define({
	ids: ['kilowatts_per_gallons_per_minute', 'kW/gal/min'],
	scale: 15850323,
	offset: 0,
	dimensions: { kg: 1, m: -1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'power by volumetric flow',
})

// apparent power
export const voltAmpere = HUnit.define({
	ids: ['volt_ampere', 'VA'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'apparent power',
})
export const kilovoltAmpere = HUnit.define({
	ids: ['kilovolt_ampere', 'kVA'],
	scale: 1000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'apparent power',
})
export const megavoltAmpere = HUnit.define({
	ids: ['megavolt_ampere', 'mVA'],
	scale: 1000000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'apparent power',
})

// reactive power
export const voltAmpereReactive = HUnit.define({
	ids: ['volt_ampere_reactive', 'VAR'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'reactive power',
})
export const kilovoltAmpereReactive = HUnit.define({
	ids: ['kilovolt_ampere_reactive', 'kVAR'],
	scale: 1000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'reactive power',
})
export const megavoltAmpereReactive = HUnit.define({
	ids: ['megavolt_ampere_reactive', 'MVAR'],
	scale: 1000000,
	offset: 0,
	dimensions: { kg: 1, m: 2, sec: -3, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'reactive power',
})

// pressure
export const pascal = HUnit.define({
	ids: ['pascal', 'Pa'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: -1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'pressure',
})
export const kilopascal = HUnit.define({
	ids: ['kilopascal', 'kPa'],
	scale: 1000,
	offset: 0,
	dimensions: { kg: 1, m: -1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'pressure',
})
export const bar = HUnit.define({
	ids: ['bar'],
	scale: 100000,
	offset: 0,
	dimensions: { kg: 1, m: -1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'pressure',
})
export const atmosphere = HUnit.define({
	ids: ['atmosphere', 'atm'],
	scale: 101317.1,
	offset: 0,
	dimensions: { kg: 1, m: -1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'pressure',
})
export const poundsPerSquareInch = HUnit.define({
	ids: ['pounds_per_square_inch', 'psi'],
	scale: 6894.73,
	offset: 0,
	dimensions: { kg: 1, m: -1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'pressure',
})
export const centimetersOfWater = HUnit.define({
	ids: ['centimeters_of_water', 'cmH₂O'],
	scale: 98.0665,
	offset: 0,
	dimensions: { kg: 1, m: -1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'pressure',
})
export const inchesOfWater = HUnit.define({
	ids: ['inches_of_water', 'in/wc', 'inH₂O'],
	scale: 248.84,
	offset: 0,
	dimensions: { kg: 1, m: -1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'pressure',
})
export const millimetersOfMercury = HUnit.define({
	ids: ['millimeters_of_mercury', 'mmHg'],
	scale: 133.322368421,
	offset: 0,
	dimensions: { kg: 1, m: -1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'pressure',
})
export const centimetersOfMercury = HUnit.define({
	ids: ['centimeters_of_mercury', 'cmHg'],
	scale: 1333.22368421,
	offset: 0,
	dimensions: { kg: 1, m: -1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'pressure',
})
export const inchesOfMercury = HUnit.define({
	ids: ['inches_of_mercury', 'inHg'],
	scale: 3386.38815789,
	offset: 0,
	dimensions: { kg: 1, m: -1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'pressure',
})
export const hectopascal = HUnit.define({
	ids: ['hectopascal', 'hPa'],
	scale: 100,
	offset: 0,
	dimensions: { kg: 1, m: -1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'pressure',
})
export const millibar = HUnit.define({
	ids: ['millibar', 'mbar'],
	scale: 100,
	offset: 0,
	dimensions: { kg: 1, m: -1, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'pressure',
})

// specific entropy
export const joulesPerKilogramDegreeKelvin = HUnit.define({
	ids: ['joules_per_kilogram_degree_kelvin', 'J/kg°K'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 2, sec: -2, K: -1, A: 0, mol: 0, cd: 0 },
	quantity: 'specific entropy',
})

// surface tension
export const newtonsPerMeter = HUnit.define({
	ids: ['newtons_per_meter', 'N/m'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 0, sec: -2, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'surface tension',
})

// temperature
export const fahrenheit = HUnit.define({
	ids: ['fahrenheit', '°F'],
	scale: 0.5555555555555556,
	offset: 255.37222222222223,
	dimensions: { kg: 0, m: 0, sec: 0, K: 1, A: 0, mol: 0, cd: 0 },
	quantity: 'temperature',
})
export const celsius = HUnit.define({
	ids: ['celsius', '°C'],
	scale: 1,
	offset: 273.15,
	dimensions: { kg: 0, m: 0, sec: 0, K: 1, A: 0, mol: 0, cd: 0 },
	quantity: 'temperature',
})
export const kelvin = HUnit.define({
	ids: ['kelvin', 'K'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 0, K: 1, A: 0, mol: 0, cd: 0 },
	quantity: 'temperature',
})

// temperature differential
export const fahrenheitDegrees = HUnit.define({
	ids: ['fahrenheit_degrees', 'Δ°F'],
	scale: 0.5555555555555556,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 0, K: 1, A: 0, mol: 0, cd: 0 },
	quantity: 'temperature differential',
})
export const celsiusDegrees = HUnit.define({
	ids: ['celsius_degrees', 'Δ°C'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 0, K: 1, A: 0, mol: 0, cd: 0 },
	quantity: 'temperature differential',
})
export const kelvinDegrees = HUnit.define({
	ids: ['kelvin_degrees', 'ΔK'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 0, K: 1, A: 0, mol: 0, cd: 0 },
	quantity: 'temperature differential',
})

// thermal conductivity
export const wattsPerMeterDegreeKelvin = HUnit.define({
	ids: ['watts_per_meter_degree_kelvin', 'W/m°K'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 1, m: 1, sec: -3, K: -1, A: 0, mol: 0, cd: 0 },
	quantity: 'thermal conductivity',
})

// time
export const nanosecond = HUnit.define({
	ids: ['nanosecond', 'ns'],
	scale: 1e-9,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'time',
})
export const microsecond = HUnit.define({
	ids: ['microsecond', 'µs'],
	scale: 0.000001,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'time',
})
export const millisecond = HUnit.define({
	ids: ['millisecond', 'ms'],
	scale: 0.001,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'time',
})
export const hundredthsSecond = HUnit.define({
	ids: ['hundredths_second', 'cs'],
	scale: 0.01,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'time',
})
export const tenthsSecond = HUnit.define({
	ids: ['tenths_second', 'ds'],
	scale: 0.1,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'time',
})
export const second = HUnit.define({
	ids: ['second', 'sec', 's'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'time',
})
export const minute = HUnit.define({
	ids: ['minute', 'min'],
	scale: 60,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'time',
})
export const hour = HUnit.define({
	ids: ['hour', 'hr', 'h'],
	scale: 3600,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'time',
})
export const day = HUnit.define({
	ids: ['day'],
	scale: 86400,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'time',
})
export const week = HUnit.define({
	ids: ['week', 'wk'],
	scale: 604800,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'time',
})
export const julianMonth = HUnit.define({
	ids: ['julian_month', 'mo'],
	scale: 2629800,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'time',
})
export const year = HUnit.define({
	ids: ['year', 'yr'],
	scale: 31536000,
	offset: 0,
	dimensions: { kg: 0, m: 0, sec: 1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'time',
})

// velocity
export const metersPerSecond = HUnit.define({
	ids: ['meters_per_second', 'm/s'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'velocity',
})
export const kilometersPerSecond = HUnit.define({
	ids: ['kilometers_per_second', 'km/s'],
	scale: 1000,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'velocity',
})
export const kilometersPerHour = HUnit.define({
	ids: ['kilometers_per_hour', 'km/h'],
	scale: 0.277778,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'velocity',
})
export const milesPerHour = HUnit.define({
	ids: ['miles_per_hour', 'mph'],
	scale: 0.447027,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'velocity',
})
export const feetPerSecond = HUnit.define({
	ids: ['feet_per_second', 'ft/s'],
	scale: 0.3048,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'velocity',
})
export const feetPerMinute = HUnit.define({
	ids: ['feet_per_minute', 'ft/min'],
	scale: 0.00508,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'velocity',
})
export const millimetersPerSecond = HUnit.define({
	ids: ['millimeters_per_second', 'mm/s'],
	scale: 0.001,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'velocity',
})
export const millimetersPerMinute = HUnit.define({
	ids: ['millimeters_per_minute', 'mm/min'],
	scale: 0.000016666666666666667,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'velocity',
})
export const metersPerMinute = HUnit.define({
	ids: ['meters_per_minute', 'm/min'],
	scale: 0.016666666666666666,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'velocity',
})
export const metersPerHour = HUnit.define({
	ids: ['meters_per_hour', 'm/h'],
	scale: 0.0002777777777777778,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'velocity',
})
export const knot = HUnit.define({
	ids: ['knot'],
	scale: 0.5144,
	offset: 0,
	dimensions: { kg: 0, m: 1, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'velocity',
})

// volume
export const cubicMeter = HUnit.define({
	ids: ['cubic_meter', 'm³'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volume',
})
export const cubicMillimeter = HUnit.define({
	ids: ['cubic_millimeter', 'mm³'],
	scale: 1e-9,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volume',
})
export const cubicCentimeter = HUnit.define({
	ids: ['cubic_centimeter', 'cm³'],
	scale: 0.000001,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volume',
})
export const milliliter = HUnit.define({
	ids: ['milliliter', 'mL'],
	scale: 0.000001,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volume',
})
export const hectoliter = HUnit.define({
	ids: ['hectoliter', 'hL'],
	scale: 0.1,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volume',
})
export const liter = HUnit.define({
	ids: ['liter', 'L'],
	scale: 0.001,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volume',
})
export const kiloliter = HUnit.define({
	ids: ['kiloliter', 'kL'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volume',
})
export const cubicInch = HUnit.define({
	ids: ['cubic_inch', 'in³'],
	scale: 0.000016387064,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volume',
})
export const cubicFoot = HUnit.define({
	ids: ['cubic_foot', 'ft³'],
	scale: 0.028317,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volume',
})
export const cubicYard = HUnit.define({
	ids: ['cubic_yard', 'yd³'],
	scale: 0.764555,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volume',
})
export const gallon = HUnit.define({
	ids: ['gallon', 'gal'],
	scale: 0.003785,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volume',
})
export const kilogallon = HUnit.define({
	ids: ['kilogallon', 'kgal'],
	scale: 3.785,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volume',
})
export const quart = HUnit.define({
	ids: ['quart', 'qt'],
	scale: 0.000946,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volume',
})
export const pint = HUnit.define({
	ids: ['pint', 'pt'],
	scale: 0.000473,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volume',
})
export const fluidOunce = HUnit.define({
	ids: ['fluid_ounce', 'fl_oz'],
	scale: 0.0000295729,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volume',
})
export const imperialGallon = HUnit.define({
	ids: ['imperial_gallon', 'galUK'],
	scale: 0.004546092,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volume',
})
export const hectoCubicFoot = HUnit.define({
	ids: ['hecto_cubic_foot', 'hft³'],
	scale: 2.8317,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: 0, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volume',
})

// volumetric flow
export const cubicMetersPerSecond = HUnit.define({
	ids: ['cubic_meters_per_second', 'm³/s'],
	scale: 1,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volumetric flow',
})
export const millilitersPerSecond = HUnit.define({
	ids: ['milliliters_per_second', 'mL/s'],
	scale: 0.000001,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volumetric flow',
})
export const hectolitersPerSecond = HUnit.define({
	ids: ['hectoliters_per_second', 'hL/s'],
	scale: 0.1,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volumetric flow',
})
export const litersPerSecond = HUnit.define({
	ids: ['liters_per_second', 'L/s'],
	scale: 0.001,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volumetric flow',
})
export const cubicFeetPerSecond = HUnit.define({
	ids: ['cubic_feet_per_second', 'cfs'],
	scale: 0.028317,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volumetric flow',
})
export const cubicFeetPerMinute = HUnit.define({
	ids: ['cubic_feet_per_minute', 'cfm'],
	scale: 0.0004719474432,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volumetric flow',
})
export const cubicFeetPerHour = HUnit.define({
	ids: ['cubic_feet_per_hour', 'cfh'],
	scale: 0.000007866,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volumetric flow',
})
export const kilocubicFeetPerMinute = HUnit.define({
	ids: ['kilocubic_feet_per_minute', 'kcfm'],
	scale: 0.4719474432,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volumetric flow',
})
export const imperialGallonsPerMinute = HUnit.define({
	ids: ['imperial_gallons_per_minute', 'galUK/min'],
	scale: 0.004546092,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volumetric flow',
})
export const litersPerMinute = HUnit.define({
	ids: ['liters_per_minute', 'L/min'],
	scale: 0.000016666666666666667,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volumetric flow',
})
export const gallonsPerMinute = HUnit.define({
	ids: ['gallons_per_minute', 'gal/min'],
	scale: 0.0000630901964,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volumetric flow',
})
export const gallonsPerHour = HUnit.define({
	ids: ['gallons_per_hour', 'gal/hr', 'gph'],
	scale: 0.0000010515033,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volumetric flow',
})
export const litersPerHour = HUnit.define({
	ids: ['liters_per_hour', 'L/h'],
	scale: 2.7777777777777776e-7,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volumetric flow',
})
export const cubicMetersPerMinute = HUnit.define({
	ids: ['cubic_meters_per_minute', 'm³/min'],
	scale: 0.016666666666666666,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volumetric flow',
})
export const cubicMetersPerHour = HUnit.define({
	ids: ['cubic_meters_per_hour', 'm³/h'],
	scale: 0.0002777777777777778,
	offset: 0,
	dimensions: { kg: 0, m: 3, sec: -1, K: 0, A: 0, mol: 0, cd: 0 },
	quantity: 'volumetric flow',
})

// bytes
export const byte = HUnit.define({
	ids: ['byte'],
	scale: 1,
	offset: 0,
	quantity: 'bytes',
})
export const kilobyte = HUnit.define({
	ids: ['kilobyte', 'kB'],
	scale: 1024,
	offset: 0,
	quantity: 'bytes',
})
export const megabyte = HUnit.define({
	ids: ['megabyte', 'MB'],
	scale: 1048576,
	offset: 0,
	quantity: 'bytes',
})
export const gigabyte = HUnit.define({
	ids: ['gigabyte', 'GB'],
	scale: 1073741824,
	offset: 0,
	quantity: 'bytes',
})
export const terabyte = HUnit.define({
	ids: ['terabyte', 'TB'],
	scale: 1099511627776,
	offset: 0,
	quantity: 'bytes',
})
export const petabyte = HUnit.define({
	ids: ['petabyte', 'PB'],
	scale: 1125899906842624,
	offset: 0,
	quantity: 'bytes',
})
