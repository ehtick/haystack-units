{
	"name": "haystack-units",
	"description": "Project Haystack core units",
	"keywords": [
		"project haystack",
		"haystack",
		"core",
		"units",
		"typescript"
	],
	"license": "BSD-3-Clause",
	"author": "Gareth Johnson",
	"homepage": "https://github.com/j2inn/haystack-units",
	"email": "support@j2inn.com",
	"version": "1.0.9",
	"module": "dist/index.es.js",
	"main": "dist/index.js",
	"types": "dist/index.d.ts",
	"repository": {
		"type": "git",
		"url": "https://github.com/j2inn/haystack-units"
	},
	"scripts": {
		"lint": "eslint --ext .ts .",
		"format": "prettier-eslint \"./**/*.ts\" --write",
		"test": "npm run lint",
		"doc": "typedoc ./src --excludePrivate",
		"build": "npm run build:clean && npm run build:units && tsc --project ./tsconfig.build.json && npx rollup --file=dist/index.es.js -- build/index.js && npx rollup --format=cjs --file=dist/index.js -- build/index.js && npx copyfiles -u 1 \"./build/**/*.d.ts\" ./dist",
		"build:clean": "rimraf ./dist && rimraf ./build",
		"build:units": "ts-node --compiler-options={\\\"module\\\":\\\"commonjs\\\"} ./units/buildUnits && npm run format",
		"analyze": "webpack --profile --json > stats.json && webpack-bundle-analyzer stats.json",
		"prepack": "npm run lint && npm test && npm run build"
	},
	"files": [
		"dist/**/*"
	],
	"config": {
		"unsafe-perm": true
	},
	"devDependencies": {
		"@types/node": "^16.11.6",
		"@typescript-eslint/eslint-plugin": "^5.3.0",
		"@typescript-eslint/parser": "^5.3.0",
		"copyfiles": "^2.4.1",
		"eslint": "^7.24.0",
		"eslint-config-prettier": "^8.3.0",
		"eslint-plugin-prettier": "^4.0.0",
		"haystack-core": "^2.0.22",
		"npm-dts": "^1.3.10",
		"npm-dts-webpack-plugin": "^1.3.10",
		"prettier": "^2.4.1",
		"prettier-eslint": "^13.0.0",
		"prettier-eslint-cli": "^5.0.1",
		"rimraf": "^3.0.2",
		"rollup": "^2.59.0",
		"ts-loader": "^9.2.6",
		"ts-node": "^10.4.0",
		"typedoc": "^0.22.7",
		"typescript": "^4.4.4",
		"typescript-eslint-parser": "^22.0.0"
	},
	"peerDependencies": {
		"haystack-core": "^2.0.22"
	},
	"sideEffects": false
}